<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaishengit.mapper.SaleChanceMapper">
  <resultMap id="BaseResultMap" type="com.kaishengit.entity.SaleChance">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="housenum" jdbcType="VARCHAR" property="housenum" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="progress" jdbcType="VARCHAR" property="progress" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="follow_id" jdbcType="INTEGER" property="followId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, housenum, price, progress, content, createtime, customer_id, user_id, follow_id
  </sql>
  <select id="selectByExample" parameterType="com.kaishengit.entity.SaleChanceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sale_chance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sale_chance
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sale_chance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kaishengit.entity.SaleChanceExample">
    delete from sale_chance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kaishengit.entity.SaleChance">
    insert into sale_chance (id, housenum, price, 
      progress, content, createtime, 
      customer_id, user_id, follow_id
      )
    values (#{id,jdbcType=INTEGER}, #{housenum,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{progress,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{customerId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{followId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kaishengit.entity.SaleChance" useGeneratedKeys="true" keyProperty="id">
    insert into sale_chance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="housenum != null">
        housenum,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="progress != null">
        progress,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="followId != null">
        follow_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="housenum != null">
        #{housenum,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="progress != null">
        #{progress,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="followId != null">
        #{followId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kaishengit.entity.SaleChanceExample" resultType="java.lang.Long">
    select count(*) from sale_chance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
<!--
  <resultMap id="findAllMap" type="com.kaishengit.entity.SaleChance" extends="BaseResultMap">
    <association property="customer" javaType="com.kaishengit.entity.Customer">
      <id column="id"  property="id" />
      <result column="cus_name"  property="cusName" />
      <result column="mobile"  property="mobile" />
      <result column="job"  property="job" />
      <result column="adress"  property="adress" />
      <result column="business"  property="business" />
      <result column="source"  property="source" />
      <result column="mark"  property="mark" />
      <result column="userid"  property="userId" />
      <result column="reminder"  property="reminder" />
      <result column="sex"  property="sex" />
      <result column="createtime"  property="createtime" />
      <result column="updatetime"  property="updatetime" />
    </association>
  </resultMap>-->



    <select id="findAllMyChance" parameterType="integer" resultType="com.kaishengit.entity.SaleChance">
      SELECT
          sale_chance.*, t_customer.id AS 'customer.id',
          t_customer.user_id AS 'customer.userid',
          t_customer.createtime AS 'customer.createtime',
          mobile as 'customer.mobile',
          cus_name as 'customer.cusName',
          job as 'customer.job',
          adress as 'customer.adress',
          business as 'customer.business',
          source as 'customer.source',
          mark as 'customer.mark',
          reminder as 'customer.reminder',
          sex as 'customer.sex',
          updatetime as 'customer.updatetime'
      FROM
          sale_chance
      INNER JOIN t_customer ON sale_chance.customer_id = t_customer.id
      WHERE sale_chance.user_id = #{userId}
    </select>

  <select id="findSaleChanceById" resultType="com.kaishengit.entity.SaleChance">
          SELECT
              sale_chance.*, t_customer.id AS 'customer.id',
              t_customer.user_id AS 'customer.userid',
              t_customer.createtime AS 'customer.createtime',
              mobile as 'customer.mobile',
              cus_name as 'customer.cusName',
              job as 'customer.job',
              adress as 'customer.adress',
              business as 'customer.business',
              source as 'customer.source',
              mark as 'customer.mark',
              reminder as 'customer.reminder',
              sex as 'customer.sex',
              updatetime as 'customer.updatetime'
          FROM
              sale_chance
          INNER JOIN t_customer ON sale_chance.customer_id = t_customer.id
          WHERE sale_chance.id = #{id}
  </select>


  <update id="updateByExampleSelective" parameterType="map">
    update sale_chance
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.housenum != null">
        housenum = #{record.housenum,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.progress != null">
        progress = #{record.progress,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.followId != null">
        follow_id = #{record.followId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sale_chance
    set id = #{record.id,jdbcType=INTEGER},
      housenum = #{record.housenum,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      progress = #{record.progress,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      customer_id = #{record.customerId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      follow_id = #{record.followId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kaishengit.entity.SaleChance">
    update sale_chance
    <set>
      <if test="housenum != null">
        housenum = #{housenum,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="progress != null">
        progress = #{progress,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="followId != null">
        follow_id = #{followId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kaishengit.entity.SaleChance">
    update sale_chance
    set housenum = #{housenum,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      progress = #{progress,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      customer_id = #{customerId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      follow_id = #{followId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>